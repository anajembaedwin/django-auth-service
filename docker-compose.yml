version: '3.8'

services:
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: auth_service_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  web:
    build: .
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn auth_service.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      - SECRET_KEY=django-insecure-docker-development-key-change-in-production
      - DEBUG=True
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/auth_service_db
      - REDIS_URL=redis://redis:6379/0
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  keepalive:
    image: curlimages/curl:latest
    depends_on:
      - web
    command: >
      sh -c "
        while true; do
          echo 'Pinging API to keep awake...'
          curl -f https://django-auth-service-1z64.onrender.com/health/ || echo 'Ping failed'
          sleep 840
        done
      "
    restart: unless-stopped

volumes:
  postgres_data: